---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Provision Loadbalancer
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: "{{ key_name }}"
        group: webserver
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        exact_count: 1
        region: "{{ region }}"
        count_tag:
            Name: lb01
        instance_tags:
            Name: lb01
      register: ec2

    - name: Provision WebServer1
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: "{{ key_name }}"
        group: webserver
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        exact_count: 1
        region: "{{ region }}"
        count_tag:
            Name: app01
        instance_tags:
            Name: app01
      register: ec2

    - name: Provision WebServer2
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: "{{ key_name }}"
        group: webserver
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        exact_count: 1
        region: "{{ region }}"
        count_tag:
            Name: app02
        instance_tags:
            Name: app02
      register: ec2

    - name: Provision Database
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: "{{ key_name }}"
        group: database
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        exact_count: 1
        region: "{{ region }}"
        count_tag:
            Name: db01
        instance_tags:
            Name: db01
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: ec2hosts
        groups: ec2hosts
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      with_items: "{{ ec2.instances }}"

    - name: refresh_inventory
      meta: refresh_inventory


- hosts: all
  become: true
  user: ubuntu
  gather_facts: true
  tasks:
    - name: update apt cache
      apt: update_cache=yes cache_valid_time=86400
      tags: [ 'packages' ]

- include: database.yml
- include: webserver.yml
- include: loadbalancer.yml
