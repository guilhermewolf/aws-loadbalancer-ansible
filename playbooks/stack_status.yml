---
- hosts: loadbalancer
  become: true
  gather_facts: false
  tasks:
    - name: verify nginx service
      command: service nginx status
      changed_when: false

    - name: verify nginx is listen on 80
      wait_for: port=80 timeout=1

- hosts: webserver
  become: true
  gather_facts: false
  tasks:
    - name: verify apache2 service
      command: service apache2 status
      changed_when: false

    - name: verify apache2 is listen on 80
      wait_for: port=80 timeout=1

- hosts: database
  become: true
  tasks:
    - name: verify mysql service
      command: service mysql status
      changed_when: false

    - name: verify mysql is listen on 3306
      wait_for: host={{ ansible_default_ipv4.address }} port=3306 port=3306 timeout=1

- hosts: localhost
  gather_facts: false
  tasks:
    - name: verify end-to-end reponse
      uri: url=http://{{item}} return_content=yes
      with_items: "{{groups['loadbalancer']}}"
      register: lb_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{lb_index.results}}"

    - name: verify end-to-end db reponse
      uri: url=http://{{item}}/db return_content=yes
      with_items: "{{groups['loadbalancer']}}"
      register: lb_index

    - fail: msg="db failed to return content"
      when: "'Database Connected from' not in item.content"
      with_items: "{{lb_index.results}}"

- hosts: loadbalancer
  gather_facts: false
  tasks:
    - name: verify backend response
      uri: url=http://{{item}} return_content=yes
      with_items: "{{groups['webserver']}}"
      register: app_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny {{item.item}}' not in item.content"
      with_items: "{{app_index.results}}"

    - name: verify backend db response
      uri: url=http://{{item}}/db return_content=yes
      with_items: "{{groups['webserver']}}"
      register: app_index

    - fail: msg="db failed to return content"
      when: "'Database Connected from {{item.item}}' not in item.content"
      with_items: "{{app_index.results}}"
